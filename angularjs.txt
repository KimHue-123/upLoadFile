<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>

- ng-app: defines an AngularJS application.
- ng-model: Dùng định nghĩa model như là một biến có thể sử dụng trong AngularJS.
	liên kết view trong model và các directive khác như input, textarea, select. Cung cấp các thao tác validate dữ liệu Kiểm tra và thông báo lỗi cho user Thiết lập các css class và hiệu ứng thông báo trong thẻ HTML (ng-valid, ng-invalid, ng-dirty, ng-touched, ng-ungtouched) 
- ng-bind: 
- ng-init="myCol='lightblue';cost=5": Dùng để khởi tạo dữ liệu cho ứng dụng
- ng-repeat: ~ ngFor: ng-repeat="employee in employeeList"
- ng-pattern: điều kiện input (ng-pattern="/^[0-9]+$/")


---------------------
- Scope : là đối tượng có nhiệm vụ giao tiếp giữa controller và view của ứng dụng.
- Controller : xử lí dữ liệu cho đối tượng $scope, từ đây bên views sẽ sử dụng các dữ liệu trong scope để hiển thị ra tương ứng.
- Data-binding : tự động đồng bộ dữ liệu giữa model và view
- Service : là singleton object được khởi tạo 1 lần duy nhất cho mỗi ứng dụng, cung cấp các phương thức lưu trữ dữ liệu có sãn. ($http, $httpBackend, $sce, $controller, $document, $compile, $parse, $rootElement, $rootScope …..)
- Filter : Lọc các tập con từ tập item trong các mảng và trả về các mảng mới.
- Directive : dùng để tạo các thẻ HTML riêng phục vụ những mục đích riêng. AngularJS có những directive có sẵn như ngBind, ngModel…
- Temple : một thành phần của view, hiển thị thông tin từ controller
- Routing : chuyển đổi giữa các action trong controller, qua lại giữa các view.
- MVC & MVVM : mô hình thiết kế để phân chia các ứng dụng thành nhiều phần khác nhau (gọi là Model, View và Controller) mỗi phần có một nhiệm vụ nhất định. AngularJS không triển khai MVC theo cách truyền thống, mà gắn liền hơn với Model-View-ViewModel.
---------------------AngularJS directive------------------
- ng-prefix: ng-app, ng-init, ng-repeat, ng-model,....
- ngoài directive đk cung cấp -> có thể tự định nghĩa
----------------------AngularJS expression-----------------
- Không cho phép các câu lệnh điều kiện, điều kiện lặp hay các ngoại lệ (throw exceptions)
- {{ }}	 {{: }}	: chỉ 1 lần(one-time binding)
----------------------controller ---------------------------
- Không nên dùng Controller để
	+ thay đổi giá trị của DOM( dùng data-binding)
	+ Validate form, nghĩa là không dùng controller để kiểm tra định dạng dữ liệu input của form. Trong trường hợp này sử dụng Angular Form Controls để thay thế.
	+ Lọc dữ liệu, nghĩa là chuyển đổi định dạng dữ liệu, trong trường hợp này thì dùng đối tượng Filter trong Angular.
	+ Chia sẽ dữ liệu, trường hợp này dùng Angualar Service
	+ Quản lý thời gian sống của các component
	---------------------Filter--------------------------------
- uppercase : Đổi toàn bộ text sang chữ hoa
- lowercase : Đổi toàn bộ text sang chữ thường
- currency : Định dạng text dạng tiền tệ
- filter : Lọc các mảng, kết quả là chuỗi con dựa trên các điều kiện cung cấp
- orderby : Sắp xếp các mảng theo vào các thông tin cung cấp: ng-repeat="employee in employees | orderBy:propertyName:reverse"
----------------------HTML DOM----------------------------------------
- ng-disabled : vô hiệu hóa một control đã cung cấp
- ng-show : Hiển thị một control đã cung cấp
- ng-hide : Ẩn một control đã cung cấp
- ng-click :Biểu diễn một sự kiện click chuột trong AngularJS
	<tr>
	   <td><input type="checkbox" ng-model="disable_button">Disable button</td>
	   <td><button ng-disabled="disable_button">Button</button></td>
	</tr>
----------------------Form--------------------------------
$scope.calForm.$valid
- event:
	+ ng-click
	+ ng-dbl-click
	+ ng-mousedown
	+ ng-mouseup
	+ ng-mouseenter
	+ ng-mouseleave
	+ ng-mousemove
	+ ng-mouseover
	+ ng-keydown
	+ ng-keyup
	+ ng-keypress
	+ ng-change
- 	$dirty - Thông báo rằng dữ liệu bị thay đổi.
	$invalid- Thông báo rằng dữ liệu nhập vào không hợp lệ.
	$error- Thông báo chính xác lỗi.
- Sử dụng novalidate với khai báo form để vô hiệu hóa tính năng valicate của form
- angular sẽ tự động thêm các class sau vào form:
	+ ng-valid khi form hợp lệ.
	+ ng-invalid khi form không hợp lệ.
	+ ng-pristine khi form chưa có thao tác nào, chưa thay đổi nội dung
	+ ng-dirty khi form đã có thao tác, thay đổi nội dung
	+ ng-submitted khi form đã submit.
-Submit form:
	+ Sử dụng Directive ngSubmit nằm trong thẻ Form
	+ Sử dụng Directive ngClick nằm trong thẻ input có type là submit đầu tiên
--------------------------------Ajax trong AngularJS-----------------------
- $http có thể được sử dụng để nhận dữ liệu từ server:
	function sinhvienController($scope,$http) {
		var url="employeeData.txt";
		   $http.get(url).success( function(response) {
								   $scope.framgiaEmplyee = response;
								});
	}
--------------------------------ng-model----------------------------------
- Danh sách các css được ng-model thêm vào:
	+ ng-valid
	+ ng-pristine: lúc mới chạy lên, chưa nhập liệu lần nào
	+ ng-dirty:  từng nhập dữ liệu rồi nên nó được thêm vào
	+ ng-invalid(ng-valid): là do trạng thái của input không đúng nên nó được thêm vào.
	+ ng-invalid-pattern(ng-valid-pattern): là do pattern bị sai nên nó được thêm vào
- Required 
------------------------------ ng-model-options trong AngularJS--------------
- để setting một số thông số liên quan đến ng-model. Lúc mà ứng dụng được khởi chạy thì Directive này sẽ thực hiện trước sau đó ng-model mới được tạo
- updateOn: Quyết định khi nào thì thao tác update dữ liệu vào trong $scope, thường là blur, default, kepress ....
- debounce: Giá trị của nó kiểu int và nó quyết định sau khoảng bao lâu thì thao tác update dữ liệu vào $scope được thực hiện
	+ example: ng-model-options="{updateOn:'blur', debounce:1000}"
- getterSetter: Đơn giản nó là những phương thức get, set giống trong C++, C# hay PHP
------------------------------sự khác biệt giữa ng-bind, ng-bind-html, ng-bind-template--------------------------
- ng-bind:
	+ không nên sử dụng ng-bind một cách trực tiếp, thay vào đó: {{key}}
	+ ng-bind nếu muốn quản lý được quá trình lưu model vào $scope, còn không thì sử dụng {{name}} sẽ đơn giản và tốt hơn
- Ng-bind-html: nhập html và hiển thị ra ở dạng html
	+ <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.3.2/angular-sanitize.js"></script>
	+ angular.module('myapp', ['ngSanitize'](:[danh_sach_object]))
                    .controller('ExampleController', ['$scope', function($scope) {
                }]);
- ng-bind-template: ng-bind-template="{{name}} {{website}}!": có thể chứa nhiều biểu thức trong nó

----------------------------------------------------






------------------------cmd-------------------------------------
- npm init
- npm install gulp --save-dev
- npm install gulp-connect --save-dev
- npm install -g gulp
	+ project/gulpfile.js:
		var gulp = require('gulp');
		var connect = require('gulp-connect');

		gulp.task("default", function() {
			connect.server({
				root: 'src',
				port: 4001
			})
		})
- gulp: chạy project
- npm install -g bower
	+ project/src/app/.bowerrc:
		{
			"directory": "src/bower_components"
		}
	
- bower init	y Y N(private) 	=> project/bower.json
- bower install angular --save
- bower install angular-route --save
- bower install jquery --save
- bower install bootstrap --save
- npm install angular-material


202924
-----------------------------------------Route --------------------------------------------
- ngRoute:
	+ include in html file: 
		<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.min.js"></script>
		<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular-route.min.js"></script>
	+ khai báo ngRoute là module phụ thuộc trong ứng dụng 
		//routes.js
		angular.module('myTest', ['ngRoute']);
- $routeProvider: các provider đều được định nghĩa trong module.config. => $route, $routeParams
- 2 phương thức định tuyến:
	.when(path, route); : Định nghia một route mới cho $route service
		+ path: 
		+ route:
			Template: là một chuỗi string bao gồm các thẻ HTML, 
			TemplateUrl: là một đường dẫn hay là một function trả về đường dẫn của một template html
				=> angularJS sẽ load view thông qua XHR, template được nó tìm thấy sẽ được hiển thị trong ng-view directive
					{
						templateUrl: 'AngularJS/templates/index1.html',
						controller: 'TemplateController'
					}
					
	.otherwise(params); : Định nghĩa route sẽ được sử dụng khi gọi một url không tồn tại trong các urls đã được khai báo.

		function routeProvider($routeProvider){
			$routeProvider
			  .when('/', {
				  template: '<dashboard></dashboard>'
			  });
		}
		routeProvider.$inject = ['$routeProvider'];
		angular.module('root')
		  .config(routeProvider);

		HOẶC
		
		angular.module('myTest', ['ngRoute'])
		  .config(function($routeProvider) {
			$routeProvider
			  .when('/', {
				templateUrl: 'AngularJS/templates/index1.html',
				controller: 'TemplateController'
			  })
		  });





-----------------------------------Bower -------------------------------------
- Tìm kiếm, cài đặt các thư viện trong FE
- npm install -g bower( g: dùng đk cho tất cả các project)
- bower.json: cấu hih các thư viện cần install
------------------------------------------------------
- angular.isDefined(v_name): ktr v_name có được định nghĩa không